plugins {
    id 'kotlin-kapt'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId 'com.kuluruvineeth.pointofinterest'
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'com.kuluruvineeth.pointofinterest.PoiTestRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    /*signingConfigs {

        def credentialsDebug = new Properties()
        file('../keystore/credentials-debug.properties').withInputStream {
            credentialsDebug.load(it)
        }

        debug {
            storeFile file(credentialsDebug['keystore.file'])
            storePassword credentialsDebug['keystore.password']
            keyAlias credentialsDebug['key.alias']
            keyPassword credentialsDebug['key.password']
        }

        release {
            def credentialsRelease = new Properties()
            def credentialsReleaseFile = file('../keystore/credentials-release.properties')
            if (credentialsReleaseFile.exists()) {
                credentialsReleaseFile.withInputStream { credentialsRelease.load(it) }
                println("credentials-release.properties is exist")
            } else {
                println("credentials-release.properties isn't exist - credentials-debug.properties will be used")
                credentialsRelease = credentialsDebug
            }

            storeFile file(credentialsRelease['keystore.file'])
            storePassword credentialsRelease['keystore.password']
            keyAlias credentialsRelease['key.alias']
            keyPassword credentialsRelease['key.password']
        }
    }*/

    /*buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".develop"
        }
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
        allWarningsAsErrors = false
        freeCompilerArgs += [
                '-opt-in=androidx.compose.material3.ExperimentalMaterial3Api'
        ]
    }
    kapt {
        correctErrorTypes = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.2"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    namespace 'com.grishko188.pointofinterest'
}

dependencies {

    implementation(project(":data"))
    implementation(project(":domain"))

    implementation libs.androidx.core.ktx

    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.material

    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.preview
    implementation libs.androidx.activity.compose
    implementation libs.androidx.work.manager

    implementation libs.androidx.navigation.compose
    implementation libs.hilt.navigation.compose
    implementation libs.androidx.core.splashscreen
    implementation libs.androidx.test.runner

    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.compose.material.icons
    implementation libs.coil
    implementation libs.accompanist.flowlayout

    implementation libs.hilt
    implementation libs.hilt.work.manager
    kapt libs.hilt.compiler
    kapt libs.hilt.compiler.androidx

    implementation libs.google.gms.play.service.auth
    implementation libs.androidx.browser

    implementation libs.kotlinx.datetime

    testImplementation(project(":data-test"))
    testImplementation libs.mockito.core
    testImplementation libs.mockito.inline
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.kotlin.test.junit
    testImplementation libs.junit
    testImplementation libs.hilt.testing
    testImplementation libs.robolectric
    testImplementation libs.turbine
    testImplementation libs.androix.compose.junit
    kaptTest libs.hilt.compiler

    androidTestImplementation(project(":data-test"))
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.hilt.testing
    androidTestImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.kotlin.test.junit
    androidTestImplementation libs.androix.compose.junit
    androidTestImplementation libs.androidx.work.manager.testing
    kaptAndroidTest libs.hilt.compiler
    kaptAndroidTest libs.hilt.compiler.androidx

    debugImplementation libs.androix.compose.debug.ui.tooling
    debugImplementation libs.androix.compose.debug.test.manifest
}